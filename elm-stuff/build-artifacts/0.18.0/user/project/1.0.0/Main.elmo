var _user$project$Main$update = F2(
	function (msg, _p0) {
		var _p1 = _p0;
		var _p3 = _p1;
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'KeyMsg':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						_p3,
						{keycode: _p2._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'MouseMovMsg':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						_p3,
						{x: _p2._0.x, y: _p2._0.y}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			default:
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						_p3,
						{clicks: _p1.clicks + 1}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _user$project$Main$customLi = F2(
	function (label, content) {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(label),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$span,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$style(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'color', _1: 'tomato'},
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								_elm_lang$core$Basics$toString(content)),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Main$view = function (_p4) {
	var _p5 = _p4;
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h2,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$style(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'margin-bottom', _1: '20px'},
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Application State: '),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(_user$project$Main$customLi, 'position at x: ', _p5.x),
						_1: {
							ctor: '::',
							_0: A2(_user$project$Main$customLi, 'position at y: ', _p5.y),
							_1: {
								ctor: '::',
								_0: A2(_user$project$Main$customLi, 'last keycode: ', _p5.keycode),
								_1: {
									ctor: '::',
									_0: A2(_user$project$Main$customLi, 'total clicks: ', _p5.clicks),
									_1: {ctor: '[]'}
								}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$initialModel = {x: 0, y: 0, keycode: 0, clicks: 0};
var _user$project$Main$init = {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {x: a, y: b, keycode: c, clicks: d};
	});
var _user$project$Main$MouseClickMsg = function (a) {
	return {ctor: 'MouseClickMsg', _0: a};
};
var _user$project$Main$MouseMovMsg = function (a) {
	return {ctor: 'MouseMovMsg', _0: a};
};
var _user$project$Main$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$keyboard$Keyboard$downs(_user$project$Main$KeyMsg),
			_1: {
				ctor: '::',
				_0: _elm_lang$mouse$Mouse$clicks(_user$project$Main$MouseClickMsg),
				_1: {
					ctor: '::',
					_0: _elm_lang$mouse$Mouse$moves(_user$project$Main$MouseMovMsg),
					_1: {ctor: '[]'}
				}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
